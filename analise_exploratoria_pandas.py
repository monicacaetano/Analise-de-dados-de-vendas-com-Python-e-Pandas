# -*- coding: utf-8 -*-
"""Análise_exploratória_Pandas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IKFTdna9vheDJXD3sbLB8cwjrHUlAnLA

**Análise exploratória**
"""

#Importando as bibliotecas

import pandas as pd
import matplotlib.pyplot as plt
plt.style.use("seaborn") #nesse caso seaborn é o estilo da matplotlib, e não uma bbt

#Upload do arquivo

from google.colab import files
arq = files.upload()

#Criando o dataframe

df = pd.read_excel("AdventureWorks.xlsx")

df.head() #visualizar as 5 primeiras linhas

#Verificando a quantidade de linhas e colunas

df.shape

#Verificando os tipos de dados

df.dtypes

#Qual foi a receita total?

df["Valor Venda"].sum()

#Qual o custo total?

df["custo"] = df["Custo Unitário"].mul(df["Quantidade"]) #Criando a coluna de custo
df.head(1)

#Qual o custo total?

round(df["custo"].sum(), 2) #'round' e '2' arredonda para 2 casas decimais

#Calculando o lucro. Lucro = Receita - Custo

df["lucro"] = df["Valor Venda"] - df["custo"] 
df.head(1)

#Lucro total

round(df["lucro"], 2).sum()

#Criando uma coluna de tempo total para enviar o produto

df["Tempo_envio"] = df["Data Envio"] - df["Data Venda"] 
df.head(1)

"""**Calculando a média do tempo de envio para cada marca**"""

#Transformar a coluna tempo_envio para tipo numérico

df["Tempo_envio"] = (df["Data Envio"] - df["Data Venda"]).dt.days
df.head(1)

#Verificando o tipo de coluna Tempo_envio
df["Tempo_envio"].dtype

#Média do tempo de envio por marca

df.groupby("Marca")["Tempo_envio"].mean()

"""**Missing values**"""

#Verificando se há dados faltantes na tabela

df.isnull().sum()

"""**Calculando o lucro por ano e por marca**"""

#Calculando o lucro por ano
#Não é necessário criar uma coluna de ano
#agrupa por ano e por marca. Extrai o ano da data

df.groupby([df["Data Venda"].dt.year, "Marca"])["lucro"].sum()

#Alterando a exibição dos dados para evitar a notação científica. Rodar esse código e depois rodar o código acima novamente

pd.options.display.float_format = '{:20,.2f}'.format

#Resetando o index: para exibir os dados acima em formato de coluna

lucro_ano = df.groupby([df["Data Venda"].dt.year, "Marca"])["lucro"].sum().reset_index() 
lucro_ano

#Calculando o total de produtos vendidos

df.groupby("Produto")["Quantidade"].sum().sort_values(ascending=False)

#Gráfico: total de produtos vendidos

df.groupby("Produto")["Quantidade"].sum().sort_values(ascending=True).plot.barh(title="Quantidade de Produtos Vendidos")
plt.xlabel("Total")
plt.ylabel("Produto");

#Lucro x Ano

df.groupby(df["Data Venda"].dt.year)["lucro"].sum().plot.bar(title="Lucro x Ano") #plot.bar para gráfico de barras
plt.xlabel("Ano")
plt.ylabel("Receita");

#Selecionando as vendas de 2009

df_2009 = df[df["Data Venda"].dt.year == 2009]
df_2009.head()

#Lucro x mês em 2009

df_2009.groupby(df_2009["Data Venda"].dt.month)["lucro"].sum().plot(title="Lucro x Mês") #plot para gráfico de linha
plt.xlabel("Mês")
plt.ylabel("Receita");

#Lucro x marca em 2009

df_2009.groupby("Marca")["lucro"].sum().plot.bar(title="Lucro x Marca")
plt.xlabel("Marca")
plt.ylabel("Receita")
plt.xticks(rotation="horizontal"); #título horizontal no eixo x

#Lucro x classe em 2009

df_2009.groupby("Classe")["lucro"].sum().plot.bar(title="Lucro x Classe")
plt.xlabel("Classe")
plt.ylabel("Receita")
plt.xticks(rotation="horizontal"); #título horizontal no eixo x

#Análises estatísticas gerais sobre o tempo de envio

df["Tempo_envio"].describe()

#Gráfico boxplot - exibe os quartis e outliers

plt.boxplot(df["Tempo_envio"]);

#Histograma

plt.hist(df["Tempo_envio"]);

#Tempo mínimo de envio

df["Tempo_envio"].min()

#Tempo máximo de envio

df["Tempo_envio"].max()

#Identificando o outlier

df[df["Tempo_envio"] == 20]

#Salvando o arquivo CSV

df.to_csv("df_vendas.csv", index=False) #index=false: salva o arquivo sem o índice da primeira coluna

